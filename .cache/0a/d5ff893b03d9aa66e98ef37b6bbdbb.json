{"id":"node_modules/faker/lib/date.js","dependencies":[{"name":"C:\\projects\\typescript_parcel\\package.json","includedInParent":true,"mtime":1604083844116},{"name":"C:\\projects\\typescript_parcel\\node_modules\\faker\\package.json","includedInParent":true,"mtime":1603970486539},{"name":"../index","loc":{"line":1,"column":20},"parent":"C:\\projects\\typescript_parcel\\node_modules\\faker\\lib\\date.js","resolved":"C:\\projects\\typescript_parcel\\node_modules\\faker\\index.js"}],"generated":{"js":"var Faker = require('../index');\n\nvar date = {\n\n    past: function (years, refDate) {\n        var date = (refDate) ? new Date(Date.parse(refDate)) : new Date();\n\n        var past = date.getTime();\n        past -= Faker.random.number(years) * 365 * 3600 * 1000; // some time from now to N years ago, in milliseconds\n        date.setTime(past)\n\n        return date.toJSON();\n    },\n\n    future: function (years, refDate) {\n        var date = (refDate) ? new Date(Date.parse(refDate)) : new Date();\n        var future = date.getTime();\n        future += Faker.random.number(years) * 365 * 3600 * 1000; // some time from now to N years later, in milliseconds\n        date.setTime(future)\n\n        return date.toJSON();\n    },\n    \n    between: function(from, to) {\n        var fromMilli = Date.parse(from);\n        var dateOffset = Faker.random.number(Date.parse(to) - fromMilli);\n        \n        var newDate = new Date(fromMilli + dateOffset);\n        \n        return newDate.toJSON();\n    },\n\n    recent: function (days) {\n        var date = new Date();\n        var future = date.getTime();\n        future -= Faker.random.number(days) * 3600 * 1000; // some time from now to N days ago, in milliseconds\n        date.setTime(future)\n\n        return date.toJSON();\n    }\n};\nmodule.exports = date;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/faker/lib/date.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/faker/lib/date.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}}],"sources":{"node_modules/faker/lib/date.js":"var Faker = require('../index');\n\nvar date = {\n\n    past: function (years, refDate) {\n        var date = (refDate) ? new Date(Date.parse(refDate)) : new Date();\n\n        var past = date.getTime();\n        past -= Faker.random.number(years) * 365 * 3600 * 1000; // some time from now to N years ago, in milliseconds\n        date.setTime(past)\n\n        return date.toJSON();\n    },\n\n    future: function (years, refDate) {\n        var date = (refDate) ? new Date(Date.parse(refDate)) : new Date();\n        var future = date.getTime();\n        future += Faker.random.number(years) * 365 * 3600 * 1000; // some time from now to N years later, in milliseconds\n        date.setTime(future)\n\n        return date.toJSON();\n    },\n    \n    between: function(from, to) {\n        var fromMilli = Date.parse(from);\n        var dateOffset = Faker.random.number(Date.parse(to) - fromMilli);\n        \n        var newDate = new Date(fromMilli + dateOffset);\n        \n        return newDate.toJSON();\n    },\n\n    recent: function (days) {\n        var date = new Date();\n        var future = date.getTime();\n        future -= Faker.random.number(days) * 3600 * 1000; // some time from now to N days ago, in milliseconds\n        date.setTime(future)\n\n        return date.toJSON();\n    }\n};\nmodule.exports = date;\n"},"lineCount":43}},"error":null,"hash":"74feccf5aeed61c7c93449d071322d01","cacheData":{"env":{}}}